#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Debug information card routing and retrieval issues
"""

import requests
import json
import sys

# Fix Windows encoding issues
if sys.platform == "win32":
    import os
    os.environ['PYTHONIOENCODING'] = 'utf-8'

BASE_URL = "http://127.0.0.1:8002"

def debug_info_routing():
    """Debug why info cards are getting wrong content"""
    
    print("=== DEBUGGING INFO CARD ROUTING ===")
    
    session_id = "debug-routing-001"
    
    # First, check the routing
    print("\n1. TESTING USER INPUT ROUTING")
    user_input = "I have severe trouble breathing at night"
    
    route_response = requests.post(
        f"{BASE_URL}/chat/route",
        headers={
            "X-Session-Id": session_id,
            "Content-Type": "application/json"
        },
        json={"text": user_input}
    )
    
    if route_response.status_code == 200:
        route_data = route_response.json()
        print(f"User: {user_input}")
        print(f"Routed to PNM: {route_data.get('current_pnm')}")
        print(f"Routed to Term: {route_data.get('current_term')}")
        print(f"Status: {route_data.get('status')}")
    else:
        print(f"Routing failed: {route_response.status_code}")
        return
        
    # Then check the question
    print(f"\n2. TESTING QUESTION RETRIEVAL")
    question_response = requests.get(
        f"{BASE_URL}/chat/question",
        headers={"X-Session-Id": session_id}
    )
    
    if question_response.status_code == 200:
        question_data = question_response.json()
        print(f"Question ID: {question_data.get('id')}")
        print(f"Question PNM: {question_data.get('pnm')}")
        print(f"Question Text: {question_data.get('text', '')[:100]}...")
    else:
        print(f"Question failed: {question_response.status_code}")
        
    # Now simulate the conversation and see what happens
    print(f"\n3. TESTING CONVERSATION FLOW")
    responses = [
        user_input,
        "Yes, I wake up gasping for air every night"
    ]
    
    for i, response in enumerate(responses):
        print(f"\nStep {i+1}: {response}")
        
        conv_response = requests.post(
            f"{BASE_URL}/chat/conversation",
            headers={
                "X-Session-Id": session_id,
                "Content-Type": "application/json"
            },
            json={"user_response": response}
        )
        
        if conv_response.status_code == 200:
            data = conv_response.json()
            
            print(f"  Current PNM: {data.get('current_pnm', 'N/A')}")
            print(f"  Current Term: {data.get('current_term', 'N/A')}")
            print(f"  FSM State: {data.get('fsm_state', 'N/A')}")
            
            if data.get("info_cards"):
                print(f"  Info Cards Generated: {len(data['info_cards'])}")
                for card in data["info_cards"]:
                    print(f"    Card PNM: {card.get('pnm', 'N/A')}")
                    print(f"    Card Term: {card.get('term', 'N/A')}")
                    print(f"    Card Title: {card.get('title', 'N/A')}")
                    
                    # This is the key debug - why is the wrong content being retrieved?
                    print(f"    Generated by: {card.get('generated_by', 'LLM')}")
                    print(f"    Score: {card.get('score', 'N/A')}")
            else:
                print("  No info cards generated")
        else:
            print(f"  Error: {conv_response.status_code}")
            
    print(f"\n4. CONCLUSION")
    print("The issue appears to be that:")
    print("- User talks about breathing problems")
    print("- System routes to correct PNM/term initially") 
    print("- But info cards are generated with wrong content (travel planning)")
    print("- This suggests the knowledge retrieval is returning irrelevant documents")

if __name__ == "__main__":
    debug_info_routing()